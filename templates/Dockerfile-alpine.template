
# The content above pasted from Dockerfile-$DOCKER_TAG-alpine.dev

RUN npm ci \
  && SECRET_KEY_BASE="assets" bundle exec rails assets:precompile \
  && rm -rf node_modules tmp/* .npm .gem spec test

########################################################################################
# Final image
# Get files from previous image, and prepare everything to run the 
# docker image.
########################################################################################
FROM ruby:$RUBY_TAG
LABEL org.opencontainers.image.authors="hola@decidim.org"
LABEL org.opencontainers.image.vendor="Decidim"
LABEL org.opencontainers.image.title="Decidim $DECIDIM_VERSION on docker."
LABEL org.opencontainers.image.description="Decidim instance on Docker, usable in production"
LABEL org.opencontainers.image.base.name="ruby:$RUBY_TAG"
LABEL org.opencontainers.image.licenses="AGPL-3.0-or-later"
LABEL org.opencontainers.image.revision="$GIT_REVISION"

# Rails configuration
ENV BUNDLE_JOBS=8 \
    BUNDLE_RETRY=3 \
    BUNDLE_APP_CONFIG=/home/decidim/app/.bundle \
    EDITOR=vi \
    LANG=en_US.UTF-8 \
    TZ="Europe/Madrid" \
    NODE_VERSION=$NODE_VERSION \
    RUBY_VERSION=$RUBY_VERSION \
    RAILS_ENV=production \
    RACK_ENV=production \
    NODE_ENV=production \
    HOME=/home/decidim/app \ 
    ROOT=/home/decidim/app \ 
    PATH=/home/decidim/app/bin:/usr/local/bin:$PATH \
    PORT=3000 \
    RAILS_FORCE_SSL="false" \
    RAILS_SERVE_STATIC_FILES="false"\
    RAILS_LOG_TO_STDOUT="true"\
    RAILS_ASSET_HOST="" \
    RAILS_MAX_THREAD=5 \
    RAILS_PID_FILE="tmp/pids/server.pid" \
    RAILS_SERVE_STATIC_FILES="disabled" \
    RAILS_MASTER_KEY="youReallyWantToChangeMe" \
    SECRET_KEY_BASE="youReallyWantToChangeMe"

# supervisord configuration
ENV DECIDIM_RUN_RAILS="1" \
    DECIDIM_RUN_SIDEKIQ="1"

# Decidim configuration
ENV DECIDIM_VERSION=$DECIDIM_VERSION \
    DECIDIM_SEED="1"\
    DECIDIM_DEFAULT_LOCALE="en"\
    DECIDIM_CURRENCY_UNIT="EUR"\
    DECIDIM_LOG_LEVEL="warn"\
    DECIDIM_SYSTEM_EMAIL="hello@myorg.com"\
    DECIDIM_SYSTEM_PASSWORD="youReallyWantToChangeMe"

# Database configuration
ENV DATABASE_URL="postgres://decidim:youReallyWantToChangeMe@pg/decidim" 

# Job Configuration (Sidekiq)
# WARNING: If you run an intensive instance,
# use two different redis for cache and sidekiq
# @see https://github.com/mperham/sidekiq/wiki/Using-Redis#multiple-redis-instances
ENV REDIS_URL="redis://example.com:6379/5" \
    QUEUE_ADAPTER="sidekiq" \
    SIDEKIQ_CONCURRENCY=$RAILS_MAX_THREAD

# SMTP configuration
ENV SMTP_AUTHENTICATION="plain" \
    SMTP_USERNAME="my-participatory-platform@iredmail.org" \
    SMTP_PASSWORD="youReallyWantToChangeMe" \
    SMTP_ADDRESS="smtp.iredmail.org" \
    SMTP_DOMAIN="iredmail" \
    SMTP_PORT="587" \
    SMTP_STARTTLS_AUTO="1" \
    SMTP_VERIFY_MODE="plain" 

RUN gem update --system \
  && apk update \
  && apk upgrade \
  && gem install bundler --silent \
  # Install dependencies:
  && apk --update --no-cache add \
    # nokogiri native deps (don't need full ruby-nokogiri, just these headers)
    libxslt-dev \
    # manage timezones
    tzdata \
    # communicate with postgres through the postgres gem
    postgresql-dev \
    # for image processing
    imagemagick \
    # allows gem to use git
    git \
    # seven_zip gem dep
    p7zip \ 
     # supervisord
    supervisor \
  && rm -rf /var/cache/apk/* \
  # Prepare workspace users
  && addgroup -S decidim \
  && adduser -S decidim -G decidim \
  # Remove default supervisord configuration
  && rm /etc/supervisord.conf \
  # Link logs to common alpine log directory
  && mkdir -p $HOME/log \
  && truncate -s 0 /var/log/*log \
  && chown decidim:decidim /etc/motd

# Setup templates, will be used at runtime on container initialization
COPY ./docker/templates /usr/local/share/decidim/templates

# Setup volumes before copying, to avoid data-loss on binding
VOLUME $HOME/public
VOLUME $HOME/config
VOLUME $HOME/app
VOLUME $HOME/log
VOLUME $HOME/storage

# Add binaries, to start the container
COPY ./docker/bin /usr/local/bin/
COPY ./docker/docker-entrypoint.d /usr/local/share/docker-entrypoint.d

USER decidim
COPY --from=development --chown=decidim:decidim $HOME $HOME

WORKDIR $HOME

# Set the config again, the same as the previous image, 
# to to avoid rebuilding native extensions.
RUN bundle config set --global without 'development:test' \
  && bundle config set --global path 'vendor' \
  && bundle config --global build.nokogiri --use-system-libraries \
  && bundle config --global build.charlock_holmes --with-icu-dir=/usr/include 

# Expose the rails port
EXPOSE 3000
# Define the default shell
SHELL ["/bin/sh", "-c", "set -e;"]

CMD ["start"]
ENTRYPOINT ["docker-entrypoint"]