#!/usr/bin/env bash
declare versions=(
	v027
	v026
	dev
)
declare -A branches=(
	[v027]='release/0.27-stable'
	[v026]='release/0.26-stable'
	[dev]='develop'
)
# FIXME: There is C++ compilation issues
# on alpine > 3.15
declare -A alpine=(
	[v027]='3.15'
	[v026]='3.15'
	[dev]='3.15'
)
declare -A generator_cmd=(
	[v027]='decidim $HOME --queue sidekiq'
	[v026]='decidim $HOME'
	[dev]='decidim $HOME --queue sidekiq --edge'
)
declare -A generator_install=(
	[v027]='gem install decidim -v $DECIDIM_VERSION'
	[v026]='gem install decidim -v $DECIDIM_VERSION'
	[dev]='gem install decidim'
)
stable_versions=(v027 v026)
dev_versions=(dev)

# Clear previous generated files
rm -rf bundle/Dockerfile-*
rm -f quickstart*.yml dev-*.yml
# Store decidim generation to display informative table in README
decidim_csv=()
# Clone a bare repo to get the commit hash of the target. (see OCI image spec)
git clone --bare https://github.com/decidim/decidim.git decidim-repo

# Fetch node dockerhub index to find suitable alpine image (last 500 images only)
node_versions=()
i=1
echo -n "Fetching alpine node images"
until [ $i -gt 5 ]; do
	query=$(curl --silent \
		-H 'Accept: application/json' \
		-H "Authorization: Bearer $DOCKERHUB_PERSONAL_TOKEN" \
		-H 'Content-Type: application/json' \
		"https://hub.docker.com/v2/namespaces/library/repositories/node/tags?page=$i&page_size=100")
	node_versions+=("$(echo "$query" | jq ".results[].name")")
	echo -n "."
	((i = i + 1))
done
echo ""

# Fetch ruby dockerhub index to find suitable alpine image (last 500 images only)
i=1
ruby_versions=()
echo -n "Fetching alpine ruby images"
until [ $i -gt 5 ]; do
	query=$(curl --silent \
		-H 'Accept: application/json' \
		-H "Authorization: Bearer $DOCKERHUB_PERSONAL_TOKEN" \
		-H 'Content-Type: application/json' \
		"https://hub.docker.com/v2/namespaces/library/repositories/ruby/tags?page=$i&page_size=100")
	ruby_versions+=("$(echo "$query" | jq ".results[].name")")
	echo -n "."
	((i = i + 1))
done
echo ""
echo "==="
for version in "${versions[@]}"; do
	# Retrieve Node, Ruby and Decidim version to sort out dependancies
	target_branch="${branches["$version"]}"
	target_decidim=$(curl --silent -f -lSL "https://raw.githubusercontent.com/decidim/decidim/$target_branch/lib/decidim/version.rb" | sed -n 's/^[^0-9]*\([0-9]*\.[0-9]*\.[0-9]*\(-[a-zA-Z0-9.-]*\)\{0,1\}\(\.[a-zA-Z0-9.-]*\)\{0,1\}\)[^a-zA-Z0-9.-]*.*/\1/p')
	target_ruby=$(curl --silent -f -lSL "https://raw.githubusercontent.com/decidim/decidim/$target_branch/.ruby-version" | grep -o -E '[0-9\.0-9\.0-9]+')
	target_node=$(curl --silent -f -lSL "https://raw.githubusercontent.com/decidim/decidim/$target_branch/package.json" | jq '.engines.node' | grep -o -E '[0-9\.0-9\.0-9]+')
	target_node_major=$(echo "$target_node" | cut -d'.' -f 1)
	target_ruby_major=$(echo "$target_ruby" | cut -d'.' -f 1)
	alpine_version="alpine${alpine[$version]}"
	# Get revision for decidim's target branch
	cd decidim-repo || exit
	revision="$(git log -1 "$target_branch" --pretty=format:"%H")"
	cd ..
	i=1

	# Pick a compatible node:alpine version
	node_version=$(echo "${node_versions[@]}" | grep -E "^\"$target_node_major\.[0-9]+(-rc[0-9]+)?-($alpine_version|alpine)" | head -n1)
	node_version="${node_version%\"}"
	node_version="${node_version#\"}"

	# Pick a compatible ruby:alpine version
	ruby_version=$(echo "${ruby_versions[@]}" | grep -E "^\"$target_ruby_major\.[0-9]+(-rc[0-9]+)?-$alpine_version" | head -n1)
	ruby_version="${ruby_version%\"}"
	ruby_version="${ruby_version#\"}"

	# Summary result, and generate Dockerfile from template
	echo "decidim: $target_decidim"
	echo "node: node:$node_version"
	echo "ruby: ruby:$ruby_version"
	echo "==="
	warning=$(
		cat <<EOF
# #################################################
# CONTRIBUTOR; WARNING
# This file is generated by the /update script. 
# Don't edit it directly.
#
# @see /update
# #################################################



EOF
	)

	template="templates/Dockerfile-alpine.dev.template"
	dev_dockerfile="./bundle/Dockerfile-$version-alpine.dev"
	rm -rf "$dev_dockerfile"
	echo "$warning" > "$dev_dockerfile"
	cat $template | sed -e "s@\$NODE_TAG@$node_version@g" \
		-e "s@\$RUBY_TAG@$ruby_version@g" \
		-e "s@\$GIT_REVISION@$revision@g" \
		-e "s@\$DOCKER_TAG@$version@g" \
		-e "s@\$GENERATOR_INSTALL@${generator_install[$version]}@g" \
		-e "s@\$GENERATOR_CMD@${generator_cmd[$version]}@g" \
		-e "s@\$DECIDIM_VERSION@$target_decidim@g" >>"$dev_dockerfile"
	

	template="templates/Dockerfile-alpine.template"
	production_dockerfile="./bundle/Dockerfile-$version-alpine"
	rm -rf "$production_dockerfile"
	cat "$dev_dockerfile" > "$production_dockerfile"
	cat $template | sed -e "s@\$NODE_TAG@$node_version@g" \
		-e "s@\$RUBY_TAG@$ruby_version@g" \
		-e "s@\$GIT_REVISION@$revision@g" \
		-e "s@\$DOCKER_TAG@$version@g" \
		-e "s@\$DECIDIM_VERSION@$target_decidim@g" >>"$production_dockerfile"
	
	mkdir -p ./bundle/"$version"
	touch ./bundle/"$version"/.keep

	template="templates/quickstart.local.yml.template"
	quickstart_dockercompose="./quickstart.$version.yml"
	rm -f "$quickstart_dockercompose"
	echo "$warning" >"$quickstart_dockercompose"
	cat $template | sed -e "s@\$DECIDIM_VERSION@$target_decidim@g" \
		-e "s@\$DOCKER_FILE@Dockerfile-$version-alpine@g" >>"$quickstart_dockercompose"
	
	template="templates/dev.local.yml.template"
	dev_dockercompose="./dev-$version.yml"
	rm -f "$dev_dockercompose"
	echo "$warning" >"$dev_dockercompose"
	cat $template | sed -e "s@\$DECIDIM_VERSION@$target_decidim@g" \
		-e "s@\$DOCKER_FILE@Dockerfile-$version-alpine.dev@g" >>"$dev_dockercompose"

	decidim_csv+="| $target_decidim | ruby:$ruby_version | node:$node_version | \`docker-compose -f quickstart.yml -f quickstart.$version.yml up\` |\n"
	decidim_csv+="| $target_decidim | ruby:$ruby_version | node:$node_version | \`docker-compose -f quickstart.yml -f dev-$version.yml up\` |\n"
done

# Update the quickstart with the last stable tag
last_stable="${stable_versions[0]}"
template="templates/quickstart.yml.template"
destination="./quickstart.yml"
rm -f "$destination"
echo "$warning" >"$destination"
cat $template | sed -e "s@\$DECIDIM_TAG@$last_stable@g" >> "$destination"

# Prepare README informations: Which images are stable to uses,
# which are not
STABLE_IMAGES=()
DEV_IMAGES=("\`:latest\`, ")
for v in "${stable_versions[@]}"; do
	STABLE_IMAGES+="\`:$v\`, "
	DEV_IMAGES+="\`:$v-dev\`, "
done
STABLE_IMAGES="${STABLE_IMAGES%, }"

for v in "${dev_versions[@]}"; do
	DEV_IMAGES+="\`:$v\`, "
done
DEV_IMAGES="${DEV_IMAGES%, }"
DECIDIM_TABLE="$(echo "$decidim_csv")"

template="templates/README.md.template"
destination="./README.md"
rm -f $destination
echo "<!--- $warning -->" >$destination
cat $template | sed -e "s@\$DECIDIM_TABLE@$DECIDIM_TABLE@g" \
	-e "s@\$DEV_IMAGES@$DEV_IMAGES@g" \
	-e "s@\$LAST_STABLE@$last_stable@g" \
	-e "s@\$STABLE_IMAGES@$STABLE_IMAGES@g" >>$destination
# Update Table of content
doctoc README.md

# Clean bare repo
rm -rf decidim-repo
